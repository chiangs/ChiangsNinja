/* You can add global styles to this file, and also import other style files */
@import 'normalize.scss';
@import 'variables.scss';
@import 'mixins.scss';
@import 'functions.scss';
@import 'animations.scss';

$min-font-size: $fntSizeMin;
$max-font-size: $fntSizeReg;

html,
body {
  @include fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size);
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  font-family: $fnt-main;
  color: $text;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $fnt-labels;
}

p {
  font-family: $fnt-main;
}

a,
a:visited,
a:active,
a:hover {
  text-decoration: none;
  outline: none;
}

ul {
  list-style-type: none;
}

// base flex-box rows and columns
// base CSS grid
.viewContainer {
  min-height: 100vh;
  min-width: 100vw;
  display: grid;
  grid-gap: $grid-gap;
  grid-template: repeat(16, 1fr) / repeat(16, 1fr);
  position: relative;
}

.section {
  display: flex;
  max-width: 100%;
  margin: 0 auto;
}

.column {
  flex: 1 1 0px;
}

.section:first-of-type,
.column:first-of-type {
  flex: 2 2 22px;
}

// .contextIntro {
//   grid-column: 2 / 6;
//   grid-row: 0 / 1;
// }

// .title {
//   grid-column: 1 / -1;
//   grid-row: 2 / 4;
// }

// .subtitle {
//   grid-column: 1 / -1;
//   grid-row: 4 / 5;
// }

// app-wide classes
.link {
  cursor: pointer;
  text-transform: uppercase;
}

.label {
  text-transform: uppercase;
}

.devToButton {
  background-color: $black;
  color: $white;
}

// effect for rolling link, use \xa0 in strings for spaces
.linkRoloEffect a {
  cursor: pointer;
  position: relative;
  display: inline-block;
  margin: 15px 25px;
  outline: none;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 400;
  // text-shadow: 0 0 1px rgba(255, 255, 255, 0.3);
  font-size: 1.35em;
  overflow: hidden;
  padding: 0 4px;
  height: 1em;
}

.linkRoloEffect a span {
  position: relative;
  display: inline-block;
  -webkit-transition: -webkit-transform 0.3s;
  -moz-transition: -moz-transform 0.3s;
  transition: transform 0.3s;
}

.linkRoloEffect a span::before {
  position: absolute;
  top: 100%;
  content: attr(data-hover);
  font-weight: 700;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.linkRoloEffect a:hover span,
.linkRoloEffect a:focus span {
  -webkit-transform: translateY(-100%);
  -moz-transform: translateY(-100%);
  transform: translateY(-100%);
}

// Light
.light {
  background-color: $white;
  color: $text;
  @include themeL-transition;
  .active {
    color: $accent;
  }

  .lastName {
    color: $main;
  }

  .shadow:hover {
    @include shadow-hoverL;
  }

  // .ctaButton {
  //   border: $borderThinDark;
  // }

  .devToButton {
    background-color: $black;
    color: $white;
  }

  .link:hover {
    color: $accent;
  }

  .linkRoloEffect a {
    color: $black;
  }
}

// Dark
.dark {
  background-color: $main;
  color: $text-inverted;
  @include themeD-transition;
  .active {
    color: $blue;
  }

  .lastName {
    color: $white;
  }

  .shadow:hover {
    @include shadow-hoverD;
  }

  // .ctaButton {
  //   border: $borderThinLight;
  // }
  .linkRoloEffect a {
    color: $white;
  }
}

// @media only screen and(max-width: 823px) {
//   .contextIntro {
//     grid-column: 1 / -1;
//     grid-row: 0 / 1;
//   }
// }
